<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ack | Iacutone.rb]]></title>
  <link href="http://iacutone.github.io/blog/categories/ack/atom.xml" rel="self"/>
  <link href="http://iacutone.github.io/"/>
  <updated>2017-04-26T12:25:58-04:00</updated>
  <id>http://iacutone.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Filtering Ack Results]]></title>
    <link href="http://iacutone.github.io/blog/2016/09/15/filtering-ack-results/"/>
    <updated>2016-09-15T10:23:52-04:00</updated>
    <id>http://iacutone.github.io/blog/2016/09/15/filtering-ack-results</id>
    <content type="html"><![CDATA[<p>While setting up my VIM environment, I read a blogpost which states <code>ack</code> can ignore directories. For cleaner <code>ack</code> output you can setup the file below:</p>

<pre><code class="bash .ackrc">--ignore-dir=log
--ignore-dir=public/assets
--ignore-dir=vendor/assets
--ignore-dir=tmp/cache
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find and Replace Text]]></title>
    <link href="http://iacutone.github.io/blog/2016/05/15/find-and-replace-text/"/>
    <updated>2016-05-15T11:28:24-04:00</updated>
    <id>http://iacutone.github.io/blog/2016/05/15/find-and-replace-text</id>
    <content type="html"><![CDATA[<p>If you find yourself in the situation of needing to find and replace text in multiple files, use the Command Line Interface. I wanted to rename a Phoenix application and ran the below command.</p>

<p><code>ack pivotal_commentor -l | xargs sed -i '' 's/pivotal_commentor/commentor/g'</code></p>

<p>Let&rsquo;s break this command down with a simple example.</p>

<pre><code>mkdir test
cd test
touch file1.txt
touch file2.txt
</code></pre>

<p>And lets add the text &lsquo;hello&rsquo; to both text files.</p>

<pre><code>ack hello -l
file1.txt
file2.txt
</code></pre>

<p>ack is like grep and found the files containing the string hello. The -l flag &ldquo;Only print filenames containing matches&rdquo;</p>

<pre><code>ack hello -l | xargs
file1.txt file2.txt
</code></pre>

<p>xargs is a Unix utility that constructs argument lists and is smashing the filenames into one line.</p>

<p>Finally, we pipe the arguments from xargs to sed.</p>

<pre><code>ack hello -l | xargs sed -i '' 's/hello/bye/g'
</code></pre>

<p>The -i flag allows for in place editing on the file. In the regex, the s replaces hello with bye and the g indicates globally, in case hello is found more than once in the file. The &lsquo;&rsquo; is sending the change into the correct output file.</p>
]]></content>
  </entry>
  
</feed>
