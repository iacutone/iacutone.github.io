<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Xcode | Iacutone.rb]]></title>
  <link href="http://iacutone.github.io/blog/categories/xcode/atom.xml" rel="self"/>
  <link href="http://iacutone.github.io/"/>
  <updated>2016-03-12T15:43:09-05:00</updated>
  <id>http://iacutone.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ENV Variables in XCode]]></title>
    <link href="http://iacutone.github.io/blog/2015/12/03/env-variables-in-xcode/"/>
    <updated>2015-12-03T18:02:14-05:00</updated>
    <id>http://iacutone.github.io/blog/2015/12/03/env-variables-in-xcode</id>
    <content type="html"><![CDATA[<p>Setting ENV variables in XCode in not straighforward. I have broken down how to accomplish setting up an ENV variable in the following videos and code example.</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/r5HZwbkA52I" allowfullscreen></iframe></div>
Make a new conifuration file and set any ENV variables you need.</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/jwuQgWb58Xs" allowfullscreen></iframe></div>
In the debug environment, use the debug.xcconfig file. Then, assign the value to something, in this case, SignUpUrl corresponds with the SIGN_UP_URL, which is set to localhost:4567/sign_up.</p>

<pre><code class="swift SignUpController.swift">  var info:[NSObject:AnyObject] = NSBundle.mainBundle().infoDictionary!
  var sign_up_url = info["SignUpUrl"] as! String
</code></pre>

<p>The sign_up_url variable is set to localhost:4567/signup.</p>

<p>Helpful Links</p>

<p><a href="http://bogardon.github.io/xcode/environment-variables/2013/05/20/configuring-env-variables-in-xcode.html">Configuring ENV Variables in XCode</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Auto Layout Xcode for Navigation Bar]]></title>
    <link href="http://iacutone.github.io/blog/2015/11/13/auto-layout-xcode-for-navigation-bar/"/>
    <updated>2015-11-13T19:03:02-05:00</updated>
    <id>http://iacutone.github.io/blog/2015/11/13/auto-layout-xcode-for-navigation-bar</id>
    <content type="html"><![CDATA[<p>Finding auto layout information is difficult. The steps below pin a navigation bar to the top of the screen for all iOS devices.</p>

<p><img class="center" src="/images/constraints.gif" title="" ></p>

<h3>Steps</h3>

<ul>
<li>Make sure &ldquo;Navigation Bar&rdquo; is selected on the left menu</li>
<li>Click the &ldquo;Pin&rdquo; button on the bottom right corner</li>
<li>Click the top, left and right constraints</li>
<li>Click the Height constraint</li>
<li>Add the 4 contraints</li>
</ul>


<p>The above steps &ldquo;pin&rdquo; the navigation bar object to the top of the view and stretch the navigation bar to the sides of the view. The height constraint keeps a static height for the navigation bar.</p>

<p>Helpful Links</p>

<p><a href="https://github.com/codepath/ios_guides/wiki/Auto-Layout-Basics">Auto Layout Basics</a></p>
]]></content>
  </entry>
  
</feed>
